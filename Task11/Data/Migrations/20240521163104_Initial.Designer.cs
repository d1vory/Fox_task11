// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Task11.Data;

#nullable disable

namespace Task11.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240521163104_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.3.24172.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Task11.Models.ExpenseCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ExpenseCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Food"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Transportation"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Housing"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Utilities"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Personal"
                        });
                });

            modelBuilder.Entity("Task11.Models.ExpenseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ExpenseCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseCategoryId");

                    b.ToTable("ExpenseTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExpenseCategoryId = 1,
                            Name = "Groceries"
                        },
                        new
                        {
                            Id = 2,
                            ExpenseCategoryId = 1,
                            Name = "Restaurants"
                        },
                        new
                        {
                            Id = 3,
                            ExpenseCategoryId = 2,
                            Name = "Gas"
                        },
                        new
                        {
                            Id = 4,
                            ExpenseCategoryId = 2,
                            Name = "Gas"
                        },
                        new
                        {
                            Id = 5,
                            ExpenseCategoryId = 2,
                            Name = "Repairs"
                        },
                        new
                        {
                            Id = 6,
                            ExpenseCategoryId = 2,
                            Name = "Car payment"
                        },
                        new
                        {
                            Id = 7,
                            ExpenseCategoryId = 3,
                            Name = "Mortgage or rent"
                        },
                        new
                        {
                            Id = 8,
                            ExpenseCategoryId = 3,
                            Name = "Household repairs"
                        },
                        new
                        {
                            Id = 9,
                            ExpenseCategoryId = 4,
                            Name = "Electricity"
                        },
                        new
                        {
                            Id = 10,
                            ExpenseCategoryId = 4,
                            Name = "Water"
                        },
                        new
                        {
                            Id = 11,
                            ExpenseCategoryId = 4,
                            Name = "Internet"
                        },
                        new
                        {
                            Id = 12,
                            ExpenseCategoryId = 5,
                            Name = "Adults’ clothing"
                        },
                        new
                        {
                            Id = 13,
                            ExpenseCategoryId = 6,
                            Name = "Gym memberships"
                        },
                        new
                        {
                            Id = 14,
                            ExpenseCategoryId = 6,
                            Name = "Haircuts"
                        },
                        new
                        {
                            Id = 15,
                            ExpenseCategoryId = 6,
                            Name = "Subscriptions"
                        });
                });

            modelBuilder.Entity("Task11.Models.FinancialOperation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("ExpenseTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("IncomeTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseTypeId");

                    b.HasIndex("IncomeTypeId");

                    b.ToTable("FinancialOperations");
                });

            modelBuilder.Entity("Task11.Models.IncomeCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("IncomeCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Earned"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Passive"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Portfolio"
                        });
                });

            modelBuilder.Entity("Task11.Models.IncomeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("IncomeCategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsTaxable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IncomeCategoryId");

                    b.ToTable("IncomeTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            IncomeCategoryId = 1,
                            IsTaxable = true,
                            Name = "Salary"
                        },
                        new
                        {
                            Id = 2,
                            Description = "For example, taxi drivers and restaurant servers can earn tips. And people who work in sales can earn commissions",
                            IncomeCategoryId = 1,
                            IsTaxable = true,
                            Name = "Bonus"
                        },
                        new
                        {
                            Id = 3,
                            Description = "short-term jobs performing a single task on demand",
                            IncomeCategoryId = 1,
                            IsTaxable = true,
                            Name = "Side hustle"
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            IncomeCategoryId = 2,
                            IsTaxable = true,
                            Name = "Rental "
                        },
                        new
                        {
                            Id = 5,
                            Description = "",
                            IncomeCategoryId = 2,
                            IsTaxable = true,
                            Name = "Royalties"
                        },
                        new
                        {
                            Id = 6,
                            Description = "",
                            IncomeCategoryId = 2,
                            IsTaxable = true,
                            Name = "Social help"
                        },
                        new
                        {
                            Id = 7,
                            Description = "",
                            IncomeCategoryId = 3,
                            IsTaxable = true,
                            Name = "dividends "
                        },
                        new
                        {
                            Id = 8,
                            Description = "",
                            IncomeCategoryId = 3,
                            IsTaxable = true,
                            Name = "capital gains on investments "
                        },
                        new
                        {
                            Id = 9,
                            Description = "",
                            IncomeCategoryId = 3,
                            IsTaxable = true,
                            Name = "deposit interest"
                        });
                });

            modelBuilder.Entity("Task11.Models.ExpenseType", b =>
                {
                    b.HasOne("Task11.Models.ExpenseCategory", "ExpenseCategory")
                        .WithMany()
                        .HasForeignKey("ExpenseCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpenseCategory");
                });

            modelBuilder.Entity("Task11.Models.FinancialOperation", b =>
                {
                    b.HasOne("Task11.Models.ExpenseType", "ExpenseType")
                        .WithMany()
                        .HasForeignKey("ExpenseTypeId");

                    b.HasOne("Task11.Models.IncomeType", "IncomeType")
                        .WithMany()
                        .HasForeignKey("IncomeTypeId");

                    b.Navigation("ExpenseType");

                    b.Navigation("IncomeType");
                });

            modelBuilder.Entity("Task11.Models.IncomeType", b =>
                {
                    b.HasOne("Task11.Models.IncomeCategory", "IncomeCategory")
                        .WithMany()
                        .HasForeignKey("IncomeCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IncomeCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
