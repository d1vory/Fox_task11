@page "/operation_types/{Id}/edit"
@using Shared2.DTO.OperationType
@using Frontend.Services
@using Frontend.Components
@inject NavigationManager NavManager
@inject OperationTypeService MyService


<OperationTypeForm operationType="@_dto" OnValidSubmit="@Update" Loading="@_loading" HeaderText="Create New OperationType"/>

@code {
    [CascadingParameter(Name = "ErrorComponent")]
    protected IErrorComponent ErrorComponent { get; set; }
    [Parameter] public string Id { get; set; }

    private bool _loading = false;
    private UpdateOperationTypeDto _dto = new UpdateOperationTypeDto();


    protected async override Task OnParametersSetAsync()
    {
        _dto = await MyService.Retrieve(int.Parse(Id));
    }

    private async Task Update()
    {
        _loading = true;
        try
        {
            var updatedObj = await MyService.Update(_dto, int.Parse(Id));
            NavManager.NavigateTo($"/operation_types");
        }
        catch (Exception ex)
        {
            _loading = false;
            ErrorComponent.ShowError(ex.Message);
        }
    }

}