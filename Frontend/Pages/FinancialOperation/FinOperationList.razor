@page "/operations"
@using Shared2.DTO.FinancialOperation
@using Frontend.Components
@using Frontend.Services
@inject FinancialOperationService Service

@if (_operations == null)
{
    <span class="spinner-border spinner-border-sm mr-1"></span>
}
else
{
    <div class="card">
        <MyDialog Title="Delete type of operation" Opened="@_dialogShown" CloseButtonClicked="@(() => _dialogShown = false)">
            <BodyContent>
                <div class="modal-body">
                    <h4>Are you sure you want to delete this operation ?</h4>
                    <div class="card">
                      <div class="card-body">
                        <h5 class="card-title">Financial Operation</h5>
                        <p class="card-text"><strong>ID:</strong> <span>@_selectedOperation?.Id</span></p>
                        <p class="card-text"><strong>Description:</strong> <span>@_selectedOperation?.Description</span></p>
                        <p class="card-text"><strong>Is income:</strong> <span >@_selectedOperation?.OperationType.IsIncome</span></p>
                        <p class="card-text"><strong>Amount:</strong> <span >$@_selectedOperation?.Amount</span></p>
                        <p class="card-text"><strong>Created At:</strong> <span>@_selectedOperation?.CreatedAt</span></p>
                      </div>
                    </div>

                </div>
                
            </BodyContent>
            
            <FooterContent>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="@(() => _dialogShown = false)" >Close</button>
                    <button type="button" class="btn btn-danger" @onclick="PerformDelete" >Delete</button>
                </div>
            </FooterContent>
        </MyDialog>
        
        <div class="card-header">
            <h2>Financial Operations</h2>
            <NavLink class="btn btn-primary" href="operations/create">Create new</NavLink>
        </div>
        <div class="card-body">
            <table class="table table-bordered">
                <thead>
                <tr>
                    <th>ID</th>
                    <th>Description</th>
                    <th>Operation Type</th>
                    <th>Is income</th>
                    <th>Amount</th>
                    <th>Created At</th>
                    <th>Action</th>
                </tr>
                </thead>
                <tbody id="operationsTableBody">
                @foreach (var op in _operations)
                {
                    <tr>
                        <td>@op.Id</td>
                        <td>@op.Description</td>
                        <td>@op.OperationType.Name</td>
                        <td>@op.OperationType.IsIncome</td>
                        <td>
                            @if (!op.OperationType.IsIncome)
                            {
                                @:-
                            }
                            @op.Amount
                        </td>
                        <td>@op.CreatedAt</td>
                        <td class="d-flex justify-content-evenly">
                            <NavLink class="nav-link" href=@($"operations/{op.Id}/edit") Id=@op.Id>
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil" viewBox="0 0 16 16">
                                    <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325"/>
                                </svg>
                            </NavLink>
                            <button class="nav-link" @onclick="() => ShowDeleteDialog(op)">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash3" viewBox="0 0 16 16">
                                    <path d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5M11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5 1.5 0 0 0 5 1.5v1H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 1 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47M8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5"/>
                                </svg>
                            </button>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
}

@code {

    [CascadingParameter(Name = "ErrorComponent")]
    protected IErrorComponent ErrorComponent { get; set; }

    private List<FinancialOperationDto>? _operations = [];
    private bool _dialogShown = false;
    private FinancialOperationDto? _selectedOperation;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _operations = await Service.List();
        }
        catch (ApplicationException e)
        {
            ErrorComponent.ShowError(e.Message);
        }
    }

    private void ShowDeleteDialog(FinancialOperationDto obj)
    {
        _selectedOperation = obj;
        _dialogShown = true;
    }

    private async Task PerformDelete()
    {
        if (_selectedOperation != null)
        {
            try
            {
                await Service.Delete(_selectedOperation);
            }
            catch (ApplicationException e)
            {
                ErrorComponent.ShowError(e.Message);
            }
            _operations?.Remove(_selectedOperation);
            _dialogShown = false;
        }
    }

}